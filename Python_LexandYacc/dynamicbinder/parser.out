Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ID
    SEMICOLON

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement_if
Rule 2     statement -> expression
Rule 3     statement -> return
Rule 4     expression -> expression_bracket
Rule 5     expression -> expression_bin
Rule 6     expression -> expression_uni
Rule 7     expression -> term
Rule 8     expression_bin -> expression IN term
Rule 9     expression_bin -> expression EQUAL term
Rule 10    expression_bin -> expression GREATER term
Rule 11    expression_bin -> expression LESSER term
Rule 12    expression_bin -> expression AND term
Rule 13    expression_bin -> expression OR term
Rule 14    expression_uni -> NOT term
Rule 15    expression_bracket -> LPAREN expression RPAREN
Rule 16    return -> RETURN expression
Rule 17    term -> factor
Rule 18    factor -> VARIABLE
Rule 19    factor -> NUMBER
Rule 20    factor -> STRING
Rule 21    statement_if -> IF expression statement ELSE statement

Terminals, with rules where they appear

AND                  : 12
ELSE                 : 21
EQUAL                : 9
GREATER              : 10
ID                   : 
IF                   : 21
IN                   : 8
LESSER               : 11
LPAREN               : 15
NOT                  : 14
NUMBER               : 19
OR                   : 13
RETURN               : 16
RPAREN               : 15
SEMICOLON            : 
STRING               : 20
VARIABLE             : 18
error                : 

Nonterminals, with rules where they appear

expression           : 2 8 9 10 11 12 13 15 16 21
expression_bin       : 5
expression_bracket   : 4
expression_uni       : 6
factor               : 17
return               : 3
statement            : 21 21 0
statement_if         : 1
term                 : 7 8 9 10 11 12 13 14

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement_if
    (2) statement -> . expression
    (3) statement -> . return
    (21) statement_if -> . IF expression statement ELSE statement
    (4) expression -> . expression_bracket
    (5) expression -> . expression_bin
    (6) expression -> . expression_uni
    (7) expression -> . term
    (16) return -> . RETURN expression
    (15) expression_bracket -> . LPAREN expression RPAREN
    (8) expression_bin -> . expression IN term
    (9) expression_bin -> . expression EQUAL term
    (10) expression_bin -> . expression GREATER term
    (11) expression_bin -> . expression LESSER term
    (12) expression_bin -> . expression AND term
    (13) expression_bin -> . expression OR term
    (14) expression_uni -> . NOT term
    (17) term -> . factor
    (18) factor -> . VARIABLE
    (19) factor -> . NUMBER
    (20) factor -> . STRING

    IF              shift and go to state 5
    RETURN          shift and go to state 10
    LPAREN          shift and go to state 11
    NOT             shift and go to state 12
    VARIABLE        shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    statement                      shift and go to state 1
    statement_if                   shift and go to state 2
    expression                     shift and go to state 3
    return                         shift and go to state 4
    expression_bracket             shift and go to state 6
    expression_bin                 shift and go to state 7
    expression_uni                 shift and go to state 8
    term                           shift and go to state 9
    factor                         shift and go to state 13

state 1

    (0) S' -> statement .



state 2

    (1) statement -> statement_if .

    $end            reduce using rule 1 (statement -> statement_if .)
    ELSE            reduce using rule 1 (statement -> statement_if .)


state 3

    (2) statement -> expression .
    (8) expression_bin -> expression . IN term
    (9) expression_bin -> expression . EQUAL term
    (10) expression_bin -> expression . GREATER term
    (11) expression_bin -> expression . LESSER term
    (12) expression_bin -> expression . AND term
    (13) expression_bin -> expression . OR term

    $end            reduce using rule 2 (statement -> expression .)
    ELSE            reduce using rule 2 (statement -> expression .)
    IN              shift and go to state 17
    EQUAL           shift and go to state 18
    GREATER         shift and go to state 19
    LESSER          shift and go to state 20
    AND             shift and go to state 21
    OR              shift and go to state 22


state 4

    (3) statement -> return .

    $end            reduce using rule 3 (statement -> return .)
    ELSE            reduce using rule 3 (statement -> return .)


state 5

    (21) statement_if -> IF . expression statement ELSE statement
    (4) expression -> . expression_bracket
    (5) expression -> . expression_bin
    (6) expression -> . expression_uni
    (7) expression -> . term
    (15) expression_bracket -> . LPAREN expression RPAREN
    (8) expression_bin -> . expression IN term
    (9) expression_bin -> . expression EQUAL term
    (10) expression_bin -> . expression GREATER term
    (11) expression_bin -> . expression LESSER term
    (12) expression_bin -> . expression AND term
    (13) expression_bin -> . expression OR term
    (14) expression_uni -> . NOT term
    (17) term -> . factor
    (18) factor -> . VARIABLE
    (19) factor -> . NUMBER
    (20) factor -> . STRING

    LPAREN          shift and go to state 11
    NOT             shift and go to state 12
    VARIABLE        shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    expression                     shift and go to state 23
    expression_bracket             shift and go to state 6
    expression_bin                 shift and go to state 7
    expression_uni                 shift and go to state 8
    term                           shift and go to state 9
    factor                         shift and go to state 13

state 6

    (4) expression -> expression_bracket .

    IN              reduce using rule 4 (expression -> expression_bracket .)
    EQUAL           reduce using rule 4 (expression -> expression_bracket .)
    GREATER         reduce using rule 4 (expression -> expression_bracket .)
    LESSER          reduce using rule 4 (expression -> expression_bracket .)
    AND             reduce using rule 4 (expression -> expression_bracket .)
    OR              reduce using rule 4 (expression -> expression_bracket .)
    $end            reduce using rule 4 (expression -> expression_bracket .)
    IF              reduce using rule 4 (expression -> expression_bracket .)
    RETURN          reduce using rule 4 (expression -> expression_bracket .)
    LPAREN          reduce using rule 4 (expression -> expression_bracket .)
    NOT             reduce using rule 4 (expression -> expression_bracket .)
    VARIABLE        reduce using rule 4 (expression -> expression_bracket .)
    NUMBER          reduce using rule 4 (expression -> expression_bracket .)
    STRING          reduce using rule 4 (expression -> expression_bracket .)
    ELSE            reduce using rule 4 (expression -> expression_bracket .)
    RPAREN          reduce using rule 4 (expression -> expression_bracket .)


state 7

    (5) expression -> expression_bin .

    IN              reduce using rule 5 (expression -> expression_bin .)
    EQUAL           reduce using rule 5 (expression -> expression_bin .)
    GREATER         reduce using rule 5 (expression -> expression_bin .)
    LESSER          reduce using rule 5 (expression -> expression_bin .)
    AND             reduce using rule 5 (expression -> expression_bin .)
    OR              reduce using rule 5 (expression -> expression_bin .)
    $end            reduce using rule 5 (expression -> expression_bin .)
    IF              reduce using rule 5 (expression -> expression_bin .)
    RETURN          reduce using rule 5 (expression -> expression_bin .)
    LPAREN          reduce using rule 5 (expression -> expression_bin .)
    NOT             reduce using rule 5 (expression -> expression_bin .)
    VARIABLE        reduce using rule 5 (expression -> expression_bin .)
    NUMBER          reduce using rule 5 (expression -> expression_bin .)
    STRING          reduce using rule 5 (expression -> expression_bin .)
    ELSE            reduce using rule 5 (expression -> expression_bin .)
    RPAREN          reduce using rule 5 (expression -> expression_bin .)


state 8

    (6) expression -> expression_uni .

    IN              reduce using rule 6 (expression -> expression_uni .)
    EQUAL           reduce using rule 6 (expression -> expression_uni .)
    GREATER         reduce using rule 6 (expression -> expression_uni .)
    LESSER          reduce using rule 6 (expression -> expression_uni .)
    AND             reduce using rule 6 (expression -> expression_uni .)
    OR              reduce using rule 6 (expression -> expression_uni .)
    $end            reduce using rule 6 (expression -> expression_uni .)
    IF              reduce using rule 6 (expression -> expression_uni .)
    RETURN          reduce using rule 6 (expression -> expression_uni .)
    LPAREN          reduce using rule 6 (expression -> expression_uni .)
    NOT             reduce using rule 6 (expression -> expression_uni .)
    VARIABLE        reduce using rule 6 (expression -> expression_uni .)
    NUMBER          reduce using rule 6 (expression -> expression_uni .)
    STRING          reduce using rule 6 (expression -> expression_uni .)
    ELSE            reduce using rule 6 (expression -> expression_uni .)
    RPAREN          reduce using rule 6 (expression -> expression_uni .)


state 9

    (7) expression -> term .

    IN              reduce using rule 7 (expression -> term .)
    EQUAL           reduce using rule 7 (expression -> term .)
    GREATER         reduce using rule 7 (expression -> term .)
    LESSER          reduce using rule 7 (expression -> term .)
    AND             reduce using rule 7 (expression -> term .)
    OR              reduce using rule 7 (expression -> term .)
    $end            reduce using rule 7 (expression -> term .)
    IF              reduce using rule 7 (expression -> term .)
    RETURN          reduce using rule 7 (expression -> term .)
    LPAREN          reduce using rule 7 (expression -> term .)
    NOT             reduce using rule 7 (expression -> term .)
    VARIABLE        reduce using rule 7 (expression -> term .)
    NUMBER          reduce using rule 7 (expression -> term .)
    STRING          reduce using rule 7 (expression -> term .)
    ELSE            reduce using rule 7 (expression -> term .)
    RPAREN          reduce using rule 7 (expression -> term .)


state 10

    (16) return -> RETURN . expression
    (4) expression -> . expression_bracket
    (5) expression -> . expression_bin
    (6) expression -> . expression_uni
    (7) expression -> . term
    (15) expression_bracket -> . LPAREN expression RPAREN
    (8) expression_bin -> . expression IN term
    (9) expression_bin -> . expression EQUAL term
    (10) expression_bin -> . expression GREATER term
    (11) expression_bin -> . expression LESSER term
    (12) expression_bin -> . expression AND term
    (13) expression_bin -> . expression OR term
    (14) expression_uni -> . NOT term
    (17) term -> . factor
    (18) factor -> . VARIABLE
    (19) factor -> . NUMBER
    (20) factor -> . STRING

    LPAREN          shift and go to state 11
    NOT             shift and go to state 12
    VARIABLE        shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    expression                     shift and go to state 24
    expression_bracket             shift and go to state 6
    expression_bin                 shift and go to state 7
    expression_uni                 shift and go to state 8
    term                           shift and go to state 9
    factor                         shift and go to state 13

state 11

    (15) expression_bracket -> LPAREN . expression RPAREN
    (4) expression -> . expression_bracket
    (5) expression -> . expression_bin
    (6) expression -> . expression_uni
    (7) expression -> . term
    (15) expression_bracket -> . LPAREN expression RPAREN
    (8) expression_bin -> . expression IN term
    (9) expression_bin -> . expression EQUAL term
    (10) expression_bin -> . expression GREATER term
    (11) expression_bin -> . expression LESSER term
    (12) expression_bin -> . expression AND term
    (13) expression_bin -> . expression OR term
    (14) expression_uni -> . NOT term
    (17) term -> . factor
    (18) factor -> . VARIABLE
    (19) factor -> . NUMBER
    (20) factor -> . STRING

    LPAREN          shift and go to state 11
    NOT             shift and go to state 12
    VARIABLE        shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    expression                     shift and go to state 25
    expression_bracket             shift and go to state 6
    expression_bin                 shift and go to state 7
    expression_uni                 shift and go to state 8
    term                           shift and go to state 9
    factor                         shift and go to state 13

state 12

    (14) expression_uni -> NOT . term
    (17) term -> . factor
    (18) factor -> . VARIABLE
    (19) factor -> . NUMBER
    (20) factor -> . STRING

    VARIABLE        shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    term                           shift and go to state 26
    factor                         shift and go to state 13

state 13

    (17) term -> factor .

    IN              reduce using rule 17 (term -> factor .)
    EQUAL           reduce using rule 17 (term -> factor .)
    GREATER         reduce using rule 17 (term -> factor .)
    LESSER          reduce using rule 17 (term -> factor .)
    AND             reduce using rule 17 (term -> factor .)
    OR              reduce using rule 17 (term -> factor .)
    $end            reduce using rule 17 (term -> factor .)
    IF              reduce using rule 17 (term -> factor .)
    RETURN          reduce using rule 17 (term -> factor .)
    LPAREN          reduce using rule 17 (term -> factor .)
    NOT             reduce using rule 17 (term -> factor .)
    VARIABLE        reduce using rule 17 (term -> factor .)
    NUMBER          reduce using rule 17 (term -> factor .)
    STRING          reduce using rule 17 (term -> factor .)
    ELSE            reduce using rule 17 (term -> factor .)
    RPAREN          reduce using rule 17 (term -> factor .)


state 14

    (18) factor -> VARIABLE .

    IN              reduce using rule 18 (factor -> VARIABLE .)
    EQUAL           reduce using rule 18 (factor -> VARIABLE .)
    GREATER         reduce using rule 18 (factor -> VARIABLE .)
    LESSER          reduce using rule 18 (factor -> VARIABLE .)
    AND             reduce using rule 18 (factor -> VARIABLE .)
    OR              reduce using rule 18 (factor -> VARIABLE .)
    $end            reduce using rule 18 (factor -> VARIABLE .)
    IF              reduce using rule 18 (factor -> VARIABLE .)
    RETURN          reduce using rule 18 (factor -> VARIABLE .)
    LPAREN          reduce using rule 18 (factor -> VARIABLE .)
    NOT             reduce using rule 18 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 18 (factor -> VARIABLE .)
    NUMBER          reduce using rule 18 (factor -> VARIABLE .)
    STRING          reduce using rule 18 (factor -> VARIABLE .)
    ELSE            reduce using rule 18 (factor -> VARIABLE .)
    RPAREN          reduce using rule 18 (factor -> VARIABLE .)


state 15

    (19) factor -> NUMBER .

    IN              reduce using rule 19 (factor -> NUMBER .)
    EQUAL           reduce using rule 19 (factor -> NUMBER .)
    GREATER         reduce using rule 19 (factor -> NUMBER .)
    LESSER          reduce using rule 19 (factor -> NUMBER .)
    AND             reduce using rule 19 (factor -> NUMBER .)
    OR              reduce using rule 19 (factor -> NUMBER .)
    $end            reduce using rule 19 (factor -> NUMBER .)
    IF              reduce using rule 19 (factor -> NUMBER .)
    RETURN          reduce using rule 19 (factor -> NUMBER .)
    LPAREN          reduce using rule 19 (factor -> NUMBER .)
    NOT             reduce using rule 19 (factor -> NUMBER .)
    VARIABLE        reduce using rule 19 (factor -> NUMBER .)
    NUMBER          reduce using rule 19 (factor -> NUMBER .)
    STRING          reduce using rule 19 (factor -> NUMBER .)
    ELSE            reduce using rule 19 (factor -> NUMBER .)
    RPAREN          reduce using rule 19 (factor -> NUMBER .)


state 16

    (20) factor -> STRING .

    IN              reduce using rule 20 (factor -> STRING .)
    EQUAL           reduce using rule 20 (factor -> STRING .)
    GREATER         reduce using rule 20 (factor -> STRING .)
    LESSER          reduce using rule 20 (factor -> STRING .)
    AND             reduce using rule 20 (factor -> STRING .)
    OR              reduce using rule 20 (factor -> STRING .)
    $end            reduce using rule 20 (factor -> STRING .)
    IF              reduce using rule 20 (factor -> STRING .)
    RETURN          reduce using rule 20 (factor -> STRING .)
    LPAREN          reduce using rule 20 (factor -> STRING .)
    NOT             reduce using rule 20 (factor -> STRING .)
    VARIABLE        reduce using rule 20 (factor -> STRING .)
    NUMBER          reduce using rule 20 (factor -> STRING .)
    STRING          reduce using rule 20 (factor -> STRING .)
    ELSE            reduce using rule 20 (factor -> STRING .)
    RPAREN          reduce using rule 20 (factor -> STRING .)


state 17

    (8) expression_bin -> expression IN . term
    (17) term -> . factor
    (18) factor -> . VARIABLE
    (19) factor -> . NUMBER
    (20) factor -> . STRING

    VARIABLE        shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    term                           shift and go to state 27
    factor                         shift and go to state 13

state 18

    (9) expression_bin -> expression EQUAL . term
    (17) term -> . factor
    (18) factor -> . VARIABLE
    (19) factor -> . NUMBER
    (20) factor -> . STRING

    VARIABLE        shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    term                           shift and go to state 28
    factor                         shift and go to state 13

state 19

    (10) expression_bin -> expression GREATER . term
    (17) term -> . factor
    (18) factor -> . VARIABLE
    (19) factor -> . NUMBER
    (20) factor -> . STRING

    VARIABLE        shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    term                           shift and go to state 29
    factor                         shift and go to state 13

state 20

    (11) expression_bin -> expression LESSER . term
    (17) term -> . factor
    (18) factor -> . VARIABLE
    (19) factor -> . NUMBER
    (20) factor -> . STRING

    VARIABLE        shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    term                           shift and go to state 30
    factor                         shift and go to state 13

state 21

    (12) expression_bin -> expression AND . term
    (17) term -> . factor
    (18) factor -> . VARIABLE
    (19) factor -> . NUMBER
    (20) factor -> . STRING

    VARIABLE        shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    term                           shift and go to state 31
    factor                         shift and go to state 13

state 22

    (13) expression_bin -> expression OR . term
    (17) term -> . factor
    (18) factor -> . VARIABLE
    (19) factor -> . NUMBER
    (20) factor -> . STRING

    VARIABLE        shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    term                           shift and go to state 32
    factor                         shift and go to state 13

state 23

    (21) statement_if -> IF expression . statement ELSE statement
    (8) expression_bin -> expression . IN term
    (9) expression_bin -> expression . EQUAL term
    (10) expression_bin -> expression . GREATER term
    (11) expression_bin -> expression . LESSER term
    (12) expression_bin -> expression . AND term
    (13) expression_bin -> expression . OR term
    (1) statement -> . statement_if
    (2) statement -> . expression
    (3) statement -> . return
    (21) statement_if -> . IF expression statement ELSE statement
    (4) expression -> . expression_bracket
    (5) expression -> . expression_bin
    (6) expression -> . expression_uni
    (7) expression -> . term
    (16) return -> . RETURN expression
    (15) expression_bracket -> . LPAREN expression RPAREN
    (8) expression_bin -> . expression IN term
    (9) expression_bin -> . expression EQUAL term
    (10) expression_bin -> . expression GREATER term
    (11) expression_bin -> . expression LESSER term
    (12) expression_bin -> . expression AND term
    (13) expression_bin -> . expression OR term
    (14) expression_uni -> . NOT term
    (17) term -> . factor
    (18) factor -> . VARIABLE
    (19) factor -> . NUMBER
    (20) factor -> . STRING

    IN              shift and go to state 17
    EQUAL           shift and go to state 18
    GREATER         shift and go to state 19
    LESSER          shift and go to state 20
    AND             shift and go to state 21
    OR              shift and go to state 22
    IF              shift and go to state 5
    RETURN          shift and go to state 10
    LPAREN          shift and go to state 11
    NOT             shift and go to state 12
    VARIABLE        shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    expression                     shift and go to state 3
    statement                      shift and go to state 33
    term                           shift and go to state 9
    statement_if                   shift and go to state 2
    return                         shift and go to state 4
    expression_bracket             shift and go to state 6
    expression_bin                 shift and go to state 7
    expression_uni                 shift and go to state 8
    factor                         shift and go to state 13

state 24

    (16) return -> RETURN expression .
    (8) expression_bin -> expression . IN term
    (9) expression_bin -> expression . EQUAL term
    (10) expression_bin -> expression . GREATER term
    (11) expression_bin -> expression . LESSER term
    (12) expression_bin -> expression . AND term
    (13) expression_bin -> expression . OR term

    $end            reduce using rule 16 (return -> RETURN expression .)
    ELSE            reduce using rule 16 (return -> RETURN expression .)
    IN              shift and go to state 17
    EQUAL           shift and go to state 18
    GREATER         shift and go to state 19
    LESSER          shift and go to state 20
    AND             shift and go to state 21
    OR              shift and go to state 22


state 25

    (15) expression_bracket -> LPAREN expression . RPAREN
    (8) expression_bin -> expression . IN term
    (9) expression_bin -> expression . EQUAL term
    (10) expression_bin -> expression . GREATER term
    (11) expression_bin -> expression . LESSER term
    (12) expression_bin -> expression . AND term
    (13) expression_bin -> expression . OR term

    RPAREN          shift and go to state 34
    IN              shift and go to state 17
    EQUAL           shift and go to state 18
    GREATER         shift and go to state 19
    LESSER          shift and go to state 20
    AND             shift and go to state 21
    OR              shift and go to state 22


state 26

    (14) expression_uni -> NOT term .

    IN              reduce using rule 14 (expression_uni -> NOT term .)
    EQUAL           reduce using rule 14 (expression_uni -> NOT term .)
    GREATER         reduce using rule 14 (expression_uni -> NOT term .)
    LESSER          reduce using rule 14 (expression_uni -> NOT term .)
    AND             reduce using rule 14 (expression_uni -> NOT term .)
    OR              reduce using rule 14 (expression_uni -> NOT term .)
    $end            reduce using rule 14 (expression_uni -> NOT term .)
    IF              reduce using rule 14 (expression_uni -> NOT term .)
    RETURN          reduce using rule 14 (expression_uni -> NOT term .)
    LPAREN          reduce using rule 14 (expression_uni -> NOT term .)
    NOT             reduce using rule 14 (expression_uni -> NOT term .)
    VARIABLE        reduce using rule 14 (expression_uni -> NOT term .)
    NUMBER          reduce using rule 14 (expression_uni -> NOT term .)
    STRING          reduce using rule 14 (expression_uni -> NOT term .)
    ELSE            reduce using rule 14 (expression_uni -> NOT term .)
    RPAREN          reduce using rule 14 (expression_uni -> NOT term .)


state 27

    (8) expression_bin -> expression IN term .

    IN              reduce using rule 8 (expression_bin -> expression IN term .)
    EQUAL           reduce using rule 8 (expression_bin -> expression IN term .)
    GREATER         reduce using rule 8 (expression_bin -> expression IN term .)
    LESSER          reduce using rule 8 (expression_bin -> expression IN term .)
    AND             reduce using rule 8 (expression_bin -> expression IN term .)
    OR              reduce using rule 8 (expression_bin -> expression IN term .)
    $end            reduce using rule 8 (expression_bin -> expression IN term .)
    IF              reduce using rule 8 (expression_bin -> expression IN term .)
    RETURN          reduce using rule 8 (expression_bin -> expression IN term .)
    LPAREN          reduce using rule 8 (expression_bin -> expression IN term .)
    NOT             reduce using rule 8 (expression_bin -> expression IN term .)
    VARIABLE        reduce using rule 8 (expression_bin -> expression IN term .)
    NUMBER          reduce using rule 8 (expression_bin -> expression IN term .)
    STRING          reduce using rule 8 (expression_bin -> expression IN term .)
    ELSE            reduce using rule 8 (expression_bin -> expression IN term .)
    RPAREN          reduce using rule 8 (expression_bin -> expression IN term .)


state 28

    (9) expression_bin -> expression EQUAL term .

    IN              reduce using rule 9 (expression_bin -> expression EQUAL term .)
    EQUAL           reduce using rule 9 (expression_bin -> expression EQUAL term .)
    GREATER         reduce using rule 9 (expression_bin -> expression EQUAL term .)
    LESSER          reduce using rule 9 (expression_bin -> expression EQUAL term .)
    AND             reduce using rule 9 (expression_bin -> expression EQUAL term .)
    OR              reduce using rule 9 (expression_bin -> expression EQUAL term .)
    $end            reduce using rule 9 (expression_bin -> expression EQUAL term .)
    IF              reduce using rule 9 (expression_bin -> expression EQUAL term .)
    RETURN          reduce using rule 9 (expression_bin -> expression EQUAL term .)
    LPAREN          reduce using rule 9 (expression_bin -> expression EQUAL term .)
    NOT             reduce using rule 9 (expression_bin -> expression EQUAL term .)
    VARIABLE        reduce using rule 9 (expression_bin -> expression EQUAL term .)
    NUMBER          reduce using rule 9 (expression_bin -> expression EQUAL term .)
    STRING          reduce using rule 9 (expression_bin -> expression EQUAL term .)
    ELSE            reduce using rule 9 (expression_bin -> expression EQUAL term .)
    RPAREN          reduce using rule 9 (expression_bin -> expression EQUAL term .)


state 29

    (10) expression_bin -> expression GREATER term .

    IN              reduce using rule 10 (expression_bin -> expression GREATER term .)
    EQUAL           reduce using rule 10 (expression_bin -> expression GREATER term .)
    GREATER         reduce using rule 10 (expression_bin -> expression GREATER term .)
    LESSER          reduce using rule 10 (expression_bin -> expression GREATER term .)
    AND             reduce using rule 10 (expression_bin -> expression GREATER term .)
    OR              reduce using rule 10 (expression_bin -> expression GREATER term .)
    $end            reduce using rule 10 (expression_bin -> expression GREATER term .)
    IF              reduce using rule 10 (expression_bin -> expression GREATER term .)
    RETURN          reduce using rule 10 (expression_bin -> expression GREATER term .)
    LPAREN          reduce using rule 10 (expression_bin -> expression GREATER term .)
    NOT             reduce using rule 10 (expression_bin -> expression GREATER term .)
    VARIABLE        reduce using rule 10 (expression_bin -> expression GREATER term .)
    NUMBER          reduce using rule 10 (expression_bin -> expression GREATER term .)
    STRING          reduce using rule 10 (expression_bin -> expression GREATER term .)
    ELSE            reduce using rule 10 (expression_bin -> expression GREATER term .)
    RPAREN          reduce using rule 10 (expression_bin -> expression GREATER term .)


state 30

    (11) expression_bin -> expression LESSER term .

    IN              reduce using rule 11 (expression_bin -> expression LESSER term .)
    EQUAL           reduce using rule 11 (expression_bin -> expression LESSER term .)
    GREATER         reduce using rule 11 (expression_bin -> expression LESSER term .)
    LESSER          reduce using rule 11 (expression_bin -> expression LESSER term .)
    AND             reduce using rule 11 (expression_bin -> expression LESSER term .)
    OR              reduce using rule 11 (expression_bin -> expression LESSER term .)
    $end            reduce using rule 11 (expression_bin -> expression LESSER term .)
    IF              reduce using rule 11 (expression_bin -> expression LESSER term .)
    RETURN          reduce using rule 11 (expression_bin -> expression LESSER term .)
    LPAREN          reduce using rule 11 (expression_bin -> expression LESSER term .)
    NOT             reduce using rule 11 (expression_bin -> expression LESSER term .)
    VARIABLE        reduce using rule 11 (expression_bin -> expression LESSER term .)
    NUMBER          reduce using rule 11 (expression_bin -> expression LESSER term .)
    STRING          reduce using rule 11 (expression_bin -> expression LESSER term .)
    ELSE            reduce using rule 11 (expression_bin -> expression LESSER term .)
    RPAREN          reduce using rule 11 (expression_bin -> expression LESSER term .)


state 31

    (12) expression_bin -> expression AND term .

    IN              reduce using rule 12 (expression_bin -> expression AND term .)
    EQUAL           reduce using rule 12 (expression_bin -> expression AND term .)
    GREATER         reduce using rule 12 (expression_bin -> expression AND term .)
    LESSER          reduce using rule 12 (expression_bin -> expression AND term .)
    AND             reduce using rule 12 (expression_bin -> expression AND term .)
    OR              reduce using rule 12 (expression_bin -> expression AND term .)
    $end            reduce using rule 12 (expression_bin -> expression AND term .)
    IF              reduce using rule 12 (expression_bin -> expression AND term .)
    RETURN          reduce using rule 12 (expression_bin -> expression AND term .)
    LPAREN          reduce using rule 12 (expression_bin -> expression AND term .)
    NOT             reduce using rule 12 (expression_bin -> expression AND term .)
    VARIABLE        reduce using rule 12 (expression_bin -> expression AND term .)
    NUMBER          reduce using rule 12 (expression_bin -> expression AND term .)
    STRING          reduce using rule 12 (expression_bin -> expression AND term .)
    ELSE            reduce using rule 12 (expression_bin -> expression AND term .)
    RPAREN          reduce using rule 12 (expression_bin -> expression AND term .)


state 32

    (13) expression_bin -> expression OR term .

    IN              reduce using rule 13 (expression_bin -> expression OR term .)
    EQUAL           reduce using rule 13 (expression_bin -> expression OR term .)
    GREATER         reduce using rule 13 (expression_bin -> expression OR term .)
    LESSER          reduce using rule 13 (expression_bin -> expression OR term .)
    AND             reduce using rule 13 (expression_bin -> expression OR term .)
    OR              reduce using rule 13 (expression_bin -> expression OR term .)
    $end            reduce using rule 13 (expression_bin -> expression OR term .)
    IF              reduce using rule 13 (expression_bin -> expression OR term .)
    RETURN          reduce using rule 13 (expression_bin -> expression OR term .)
    LPAREN          reduce using rule 13 (expression_bin -> expression OR term .)
    NOT             reduce using rule 13 (expression_bin -> expression OR term .)
    VARIABLE        reduce using rule 13 (expression_bin -> expression OR term .)
    NUMBER          reduce using rule 13 (expression_bin -> expression OR term .)
    STRING          reduce using rule 13 (expression_bin -> expression OR term .)
    ELSE            reduce using rule 13 (expression_bin -> expression OR term .)
    RPAREN          reduce using rule 13 (expression_bin -> expression OR term .)


state 33

    (21) statement_if -> IF expression statement . ELSE statement

    ELSE            shift and go to state 35


state 34

    (15) expression_bracket -> LPAREN expression RPAREN .

    IN              reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    LESSER          reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    AND             reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    OR              reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    $end            reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    IF              reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    NOT             reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    VARIABLE        reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    STRING          reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 15 (expression_bracket -> LPAREN expression RPAREN .)


state 35

    (21) statement_if -> IF expression statement ELSE . statement
    (1) statement -> . statement_if
    (2) statement -> . expression
    (3) statement -> . return
    (21) statement_if -> . IF expression statement ELSE statement
    (4) expression -> . expression_bracket
    (5) expression -> . expression_bin
    (6) expression -> . expression_uni
    (7) expression -> . term
    (16) return -> . RETURN expression
    (15) expression_bracket -> . LPAREN expression RPAREN
    (8) expression_bin -> . expression IN term
    (9) expression_bin -> . expression EQUAL term
    (10) expression_bin -> . expression GREATER term
    (11) expression_bin -> . expression LESSER term
    (12) expression_bin -> . expression AND term
    (13) expression_bin -> . expression OR term
    (14) expression_uni -> . NOT term
    (17) term -> . factor
    (18) factor -> . VARIABLE
    (19) factor -> . NUMBER
    (20) factor -> . STRING

    IF              shift and go to state 5
    RETURN          shift and go to state 10
    LPAREN          shift and go to state 11
    NOT             shift and go to state 12
    VARIABLE        shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    expression                     shift and go to state 3
    statement                      shift and go to state 36
    statement_if                   shift and go to state 2
    return                         shift and go to state 4
    expression_bracket             shift and go to state 6
    expression_bin                 shift and go to state 7
    expression_uni                 shift and go to state 8
    term                           shift and go to state 9
    factor                         shift and go to state 13

state 36

    (21) statement_if -> IF expression statement ELSE statement .

    $end            reduce using rule 21 (statement_if -> IF expression statement ELSE statement .)
    ELSE            reduce using rule 21 (statement_if -> IF expression statement ELSE statement .)

