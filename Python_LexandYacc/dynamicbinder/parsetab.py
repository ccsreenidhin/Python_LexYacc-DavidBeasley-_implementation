
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ELSE EQUAL GREATER ID IF IN LESSER LPAREN NOT NUMBER OR RETURN RPAREN SEMICOLON STRING VARIABLEstatement : statement_if\n                | expression\n                | return\n    expression : expression_bracket\n                  | expression_bin\n                  | expression_uni\n                  | term\n    expression_bin : expression IN term\n                  | expression EQUAL term\n                  | expression GREATER term\n                  | expression LESSER term\n                  | expression AND term\n                  | expression OR term\n    expression_uni : NOT term\n    expression_bracket : LPAREN expression RPAREN\n    return : RETURN expression\n    term : factor\n    factor : VARIABLE\n              | NUMBER\n              | STRING\n    statement_if : IF expression statement ELSE statement\n    '
    
_lr_action_items = {'IF':([0,6,7,8,9,13,14,15,16,23,26,27,28,29,30,31,32,34,35,],[5,-4,-5,-6,-7,-17,-18,-19,-20,5,-14,-8,-9,-10,-11,-12,-13,-15,5,]),'RETURN':([0,6,7,8,9,13,14,15,16,23,26,27,28,29,30,31,32,34,35,],[10,-4,-5,-6,-7,-17,-18,-19,-20,10,-14,-8,-9,-10,-11,-12,-13,-15,10,]),'LPAREN':([0,5,6,7,8,9,10,11,13,14,15,16,23,26,27,28,29,30,31,32,34,35,],[11,11,-4,-5,-6,-7,11,11,-17,-18,-19,-20,11,-14,-8,-9,-10,-11,-12,-13,-15,11,]),'NOT':([0,5,6,7,8,9,10,11,13,14,15,16,23,26,27,28,29,30,31,32,34,35,],[12,12,-4,-5,-6,-7,12,12,-17,-18,-19,-20,12,-14,-8,-9,-10,-11,-12,-13,-15,12,]),'VARIABLE':([0,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,32,34,35,],[14,14,-4,-5,-6,-7,14,14,14,-17,-18,-19,-20,14,14,14,14,14,14,14,-14,-8,-9,-10,-11,-12,-13,-15,14,]),'NUMBER':([0,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,32,34,35,],[15,15,-4,-5,-6,-7,15,15,15,-17,-18,-19,-20,15,15,15,15,15,15,15,-14,-8,-9,-10,-11,-12,-13,-15,15,]),'STRING':([0,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,32,34,35,],[16,16,-4,-5,-6,-7,16,16,16,-17,-18,-19,-20,16,16,16,16,16,16,16,-14,-8,-9,-10,-11,-12,-13,-15,16,]),'$end':([1,2,3,4,6,7,8,9,13,14,15,16,24,26,27,28,29,30,31,32,34,36,],[0,-1,-2,-3,-4,-5,-6,-7,-17,-18,-19,-20,-16,-14,-8,-9,-10,-11,-12,-13,-15,-21,]),'ELSE':([2,3,4,6,7,8,9,13,14,15,16,24,26,27,28,29,30,31,32,33,34,36,],[-1,-2,-3,-4,-5,-6,-7,-17,-18,-19,-20,-16,-14,-8,-9,-10,-11,-12,-13,35,-15,-21,]),'IN':([3,6,7,8,9,13,14,15,16,23,24,25,26,27,28,29,30,31,32,34,],[17,-4,-5,-6,-7,-17,-18,-19,-20,17,17,17,-14,-8,-9,-10,-11,-12,-13,-15,]),'EQUAL':([3,6,7,8,9,13,14,15,16,23,24,25,26,27,28,29,30,31,32,34,],[18,-4,-5,-6,-7,-17,-18,-19,-20,18,18,18,-14,-8,-9,-10,-11,-12,-13,-15,]),'GREATER':([3,6,7,8,9,13,14,15,16,23,24,25,26,27,28,29,30,31,32,34,],[19,-4,-5,-6,-7,-17,-18,-19,-20,19,19,19,-14,-8,-9,-10,-11,-12,-13,-15,]),'LESSER':([3,6,7,8,9,13,14,15,16,23,24,25,26,27,28,29,30,31,32,34,],[20,-4,-5,-6,-7,-17,-18,-19,-20,20,20,20,-14,-8,-9,-10,-11,-12,-13,-15,]),'AND':([3,6,7,8,9,13,14,15,16,23,24,25,26,27,28,29,30,31,32,34,],[21,-4,-5,-6,-7,-17,-18,-19,-20,21,21,21,-14,-8,-9,-10,-11,-12,-13,-15,]),'OR':([3,6,7,8,9,13,14,15,16,23,24,25,26,27,28,29,30,31,32,34,],[22,-4,-5,-6,-7,-17,-18,-19,-20,22,22,22,-14,-8,-9,-10,-11,-12,-13,-15,]),'RPAREN':([6,7,8,9,13,14,15,16,25,26,27,28,29,30,31,32,34,],[-4,-5,-6,-7,-17,-18,-19,-20,34,-14,-8,-9,-10,-11,-12,-13,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,23,35,],[1,33,36,]),'statement_if':([0,23,35,],[2,2,2,]),'expression':([0,5,10,11,23,35,],[3,23,24,25,3,3,]),'return':([0,23,35,],[4,4,4,]),'expression_bracket':([0,5,10,11,23,35,],[6,6,6,6,6,6,]),'expression_bin':([0,5,10,11,23,35,],[7,7,7,7,7,7,]),'expression_uni':([0,5,10,11,23,35,],[8,8,8,8,8,8,]),'term':([0,5,10,11,12,17,18,19,20,21,22,23,35,],[9,9,9,9,26,27,28,29,30,31,32,9,9,]),'factor':([0,5,10,11,12,17,18,19,20,21,22,23,35,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> statement_if','statement',1,'p_statement','parser.py',20),
  ('statement -> expression','statement',1,'p_statement','parser.py',21),
  ('statement -> return','statement',1,'p_statement','parser.py',22),
  ('expression -> expression_bracket','expression',1,'p_expression','parser.py',28),
  ('expression -> expression_bin','expression',1,'p_expression','parser.py',29),
  ('expression -> expression_uni','expression',1,'p_expression','parser.py',30),
  ('expression -> term','expression',1,'p_expression','parser.py',31),
  ('expression_bin -> expression IN term','expression_bin',3,'p_expression_bin','parser.py',37),
  ('expression_bin -> expression EQUAL term','expression_bin',3,'p_expression_bin','parser.py',38),
  ('expression_bin -> expression GREATER term','expression_bin',3,'p_expression_bin','parser.py',39),
  ('expression_bin -> expression LESSER term','expression_bin',3,'p_expression_bin','parser.py',40),
  ('expression_bin -> expression AND term','expression_bin',3,'p_expression_bin','parser.py',41),
  ('expression_bin -> expression OR term','expression_bin',3,'p_expression_bin','parser.py',42),
  ('expression_uni -> NOT term','expression_uni',2,'p_expression_uni','parser.py',59),
  ('expression_bracket -> LPAREN expression RPAREN','expression_bracket',3,'p_expression_bracket','parser.py',68),
  ('return -> RETURN expression','return',2,'p_return','parser.py',74),
  ('term -> factor','term',1,'p_term','parser.py',80),
  ('factor -> VARIABLE','factor',1,'p_factor','parser.py',86),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',87),
  ('factor -> STRING','factor',1,'p_factor','parser.py',88),
  ('statement_if -> IF expression statement ELSE statement','statement_if',5,'p_statement_if','parser.py',93),
]
